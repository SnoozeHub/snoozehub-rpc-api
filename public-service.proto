syntax = "proto3";

option go_package = "./grpc_gen";

import "common-messages.proto";

service PublicService {
	// Authentication
	rpc GetNonce (Empty) returns (GetNonceResponse);
	rpc Auth (AuthRequest) returns (AuthResponse);


	rpc GetBeds(GetBedsRequest) returns (BedList); // Every bed returned has the field bedMutableInfo mandatory
	rpc GetReview(GetReviewsRequest) returns (GetReviewsResponse);
}

message GetNonceResponse {
	string nonce = 1; // Not empty
}

message AuthRequest {
	string nonce = 1; // Valid format
	string signedNonce = 2; // signing algorithm: secp256k1 . Valid format
}

message AuthResponse {
	string authToken = 1; // Not empty
	bool accountExist = 2;
}

// BedList returned will include only beds which has at least 1 date available in the range [dateRangeLow, dateRangeHigh]
message GetBedsRequest {
	Date dateRangeLow = 1; // It's valid. > today (aka from tomorrow)
	Date dateRangeHigh = 2; // It's valid. dateRangeHigh >= dateRangeLow
	string place = 3; // length=1-100. Maximum sensitive (aka it search the exact string)

	repeated Feature featuresMondatory = 4;

	// Get first N results in order by proximity from fromIndex to fromIndex+N where N=15.
	uint32 fromIndex = 5;
}

message GetReviewsRequest {
	BedId bedId = 1;
	// Get first N results (oder is not specified) from fromIndex to fromIndex+N where N=4.
	uint32 fromIndex = 2;
}

message GetReviewsResponse {
	repeated Review reviews = 1; // 0-4 reviews. The field comment is mandatory
}